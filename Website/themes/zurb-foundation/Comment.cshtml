<article data-id="@Model.ID" itemscope itemtype="http://schema.org/UserComments" itemprop="comment" class="row @(Model.IsAdmin ? "self" : null)">
    <div class="large-12 columns">
        <div class="row">
            <div class="large-12 columns right">
                @Date()
            </div>
        </div>
        <br />
        <div class="row">
            <div class="large-2 columns">
                @Gravatar(50)<br />
                @Author()
            </div>
            <div class="large-10 columns" itemprop="commentText">@Html.Raw(Model.Content)</div>
        </div>
        <br />
        <div class="row">
            <div class="large-2 columns right">
                @DeleteButton()
            </div>
        </div>
    </div>
</article>

@helper Date()
{
    var title = Model.PubDate.ToString("yyyy-MM-ddTHH:mm");
    var display = Model.PubDate.ToString("d. MMMM yyyy HH:mm");
    <time datetime="@title" itemprop="commentTime">@display</time>
}
@helper Author()
{
    if (string.IsNullOrEmpty(Model.Website))
    {
    <strong itemprop="creator">@Model.Author</strong>
    }
    else
    {
    <strong itemprop="creator"><a href="@Model.Website" rel="nofollow">@Model.Author</a></strong>
    }
}
@helper DeleteButton()
{
    if (User.Identity.IsAuthenticated)
    {
    <button class="deletecomment btn btn-link">Delete</button>
    }
}
@helper Gravatar(int size)
{
    var hash = FormsAuthentication.HashPasswordForStoringInConfigFile(Model.Email.ToLowerInvariant(), "MD5").ToLowerInvariant();
    var imageUrl = string.Format("http://www.gravatar.com/avatar/{0}?s={1}&d=retro&r=g", hash, size);
    <img src="@imageUrl" width="@size" height="@size" alt="@Model.Author" />
}